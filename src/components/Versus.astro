---
// src/components/RecentMatchCard.astro
import { LoaderCircle } from "@lucide/astro";

export interface Player {
  id: string;
  name: string;
}
export interface Match {
  _id: string;
  game_number: number;
  map: string;
  team1: Player[];
  team2: Player[];
  status: string;
  winner: 1 | 2 | null;
  createdAt: string;
  finishedAt?: string;
  thread_id?: string;
}

export interface Props {
  match: Match;
  className?: string;
  title?: string;
}

const { match, className = "", title } = Astro.props;
const { map, status, winner, team1, team2, createdAt, finishedAt } = match;

// Formatea fecha y duración
const endDate = finishedAt ? new Date(finishedAt) : null;
const startDate = new Date(createdAt);
const dateLabel = endDate
  ? endDate.toLocaleDateString("es-AR", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
    })
  : startDate.toLocaleDateString("es-AR", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
    });
const timeLabel = endDate
  ? endDate.toLocaleTimeString("es-AR", { hour: "2-digit", minute: "2-digit" })
  : startDate.toLocaleTimeString("es-AR", {
      hour: "2-digit",
      minute: "2-digit",
    });

let durationLabel = "";
if (endDate) {
  const diffMs = endDate.getTime() - startDate.getTime();
  const diffMin = Math.round(diffMs / 60000);
  durationLabel =
    diffMin > 59
      ? `${Math.floor(diffMin / 60)}h ${diffMin % 60}m`
      : `${diffMin}m`;
}

const statusClasses = {
  ongoing:
    "bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200",
  finished: "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200",
  upcoming: "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200",
};
const statusText =
  status === "ongoing"
    ? "En curso"
    : status === "completed"
      ? "Finalizada"
      : "Próxima";

const teamStyle = (teamNum: 1 | 2) =>
  status === "completed" && winner === teamNum
    ? "bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 border-green-300 dark:border-green-600 shadow-lg"
    : "bg-white dark:bg-neutral-700 border-neutral-200 dark:border-neutral-600 hover:border-neutral-300 dark:hover:border-neutral-500";

    console.log("Match data:", teamStyle(1));
---

<div
  class:list={[
    "bg-white dark:bg-neutral-800 rounded-xl shadow-lg border border-neutral-200 dark:border-neutral-700 p-6 transition-all duration-200 hover:shadow-xl",
    className,
  ]}
>
  <!-- Header -->
  <div class="flex items-center justify-between mb-4">
             {title && (
    <h2 class="text-xl font-semibold mb-4 text-neutral-900 dark:text-neutral-100">{title}</h2>
  )}

    <h3 class="text-xl font-semibold text-neutral-900 dark:text-neutral-100">
      Juego #{match.game_number} - {map}
    </h3>
    <span
      class:list={[
        "inline-flex items-center px-2 py-1 rounded-full text-xs font-medium",
        statusClasses[status] || statusClasses.upcoming,
      ]}
    >
      {
        status === "ongoing" && (
          <LoaderCircle class="animate-spin mr-1" size={14} />
        )
      }
      {statusText}
    </span>
  </div>
  <div class="text-sm text-neutral-500 dark:text-neutral-400 mb-6">
    {dateLabel}
    {timeLabel}
    {durationLabel && `• ${durationLabel}`}
  </div>

  <!-- Teams -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
    <div
      <div
      class={`p-4 rounded-lg border-2 transition-colors duration-200 ${teamStyle(1)}`}
    >
      <h4 class="font-bold mb-2 text-neutral-900 dark:text-neutral-100">
        Equipo 1
      </h4>
      <ul class="space-y-2">
        {
          team1.map((p) => (
            <li
              key={p.id}
              class="flex items-center space-x-2 text-neutral-900 dark:text-neutral-100"
            >
              <span>{p.name}</span>
            </li>
          ))
        }
      </ul>
    </div>
    <div
      <div
      class={`p-4 rounded-lg border-2 transition-colors duration-200 ${teamStyle(2)}`}
    >
      <h4 class="font-bold mb-2 text-neutral-900 dark:text-neutral-100">
        Equipo 2
      </h4>
      <ul class="space-y-2">
        {
          team2.map((p) => (
            <li
              key={p.id}
              class="flex items-center space-x-2 text-neutral-900 dark:text-neutral-100"
            >
              <span>{p.name}</span>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
