---
import CivilizationsModal from './CivModal.astro';

interface CivRating {
  [key: string]: number;
}

interface MapData {
  _id: string;
  civ_rating: CivRating;
  name: string;
  chance: number;
  type: string;
}

interface Props {
  mapData: MapData;
  imageUrl?: string;
  showTopCivs?: number;
  className?: string;
}

const { 
  mapData, 
  imageUrl = `src/assetss/maps/placeholder.png`,
  showTopCivs = 5,
  className = ''
} = Astro.props;

// Ordenar civilizaciones por rating
const sortedCivs = Object.entries(mapData.civ_rating)
  .sort(([,a], [,b]) => b - a)
  .slice(0, showTopCivs);

// Obtener el tipo de mapa con estilo
const getMapTypeStyle = (type: string) => {
  switch (type.toLowerCase()) {
    case 'classic':
      return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';
    case 'water':
      return 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-200';
    case 'hybrid':
      return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200';
    case 'nomad':
      return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';
    default:
      return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';
  }
};

// Obtener color para el rating
const getRatingColor = (rating: number) => {
  if (rating >= 95) return 'text-green-600 dark:text-green-400';
  if (rating >= 90) return 'text-blue-600 dark:text-blue-400';
  if (rating >= 85) return 'text-yellow-600 dark:text-yellow-400';
  return 'text-red-600 dark:text-red-400';
};

// Obtener color para la barra de progreso
const getProgressColor = (rating: number) => {
  if (rating >= 95) return 'bg-green-500';
  if (rating >= 90) return 'bg-blue-500';
  if (rating >= 85) return 'bg-yellow-500';
  return 'bg-red-500';
};

const totalCivs = Object.keys(mapData.civ_rating).length;
const avgRating = Math.round(
  Object.values(mapData.civ_rating).reduce((sum, rating) => sum + rating, 0) / totalCivs
);

// Generar ID único para el modal
const modalId = `modal-${mapData._id}`;
---

<div class:list={[
  "bg-white dark:bg-neutral-800 rounded-xl shadow-lg border border-neutral-200 dark:border-neutral-700 overflow-hidden transition-all duration-200 hover:shadow-xl hover:scale-[1.02]",
  className
]}>
  <!-- Imagen del mapa -->
  <div class="relative h-48 overflow-hidden">
    <img 
      src=`src/assets/${imageUrl}` || "/placeholder.svg" 
      alt={mapData.name}
      class="w-full h-full object-cover transition-transform duration-300 hover:scale-110"
    />
    <div class="absolute top-0 left-0 right-0 bottom-0 bg-gradient-to-t from-black/50 to-transparent"></div>
    
    <!-- Badges superpuestos -->
    <div class="absolute top-3 left-3 flex items-center space-x-2">
      <span class:list={[
        "inline-flex items-center px-2 py-1 rounded-full text-xs font-medium",
        getMapTypeStyle(mapData.type)
      ]}>
        {mapData.type.charAt(0).toUpperCase() + mapData.type.slice(1)}
      </span>
      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-black/50 text-white backdrop-blur-none">
        {mapData.chance}% probabilidad
      </span>
    </div>

    <!-- Título superpuesto -->
    <div class="absolute bottom-3 left-3 right-3">
      <h3 class="text-xl font-bold text-white drop-shadow-lg">
        {mapData.name}
      </h3>
    </div>
  </div>

  <!-- Contenido de la card -->
  <div class="p-6">
    <!-- Estadísticas generales -->
    <div class="grid grid-cols-3 gap-4 mb-6">
      <div class="text-center">
        <div class="text-2xl font-bold text-neutral-900 dark:text-neutral-100">
          {totalCivs}
        </div>
        <div class="text-xs text-neutral-500 dark:text-neutral-400">
          Civilizaciones
        </div>
      </div>
      <div class="text-center">
        <div class:list={[
          "text-2xl font-bold",
          getRatingColor(avgRating)
        ]}>
          {avgRating}
        </div>
        <div class="text-xs text-neutral-500 dark:text-neutral-400">
          Rating Promedio
        </div>
      </div>
      <div class="text-center">
        <div class="text-2xl font-bold text-neutral-900 dark:text-neutral-100">
          {sortedCivs[0][1]}
        </div>
        <div class="text-xs text-neutral-500 dark:text-neutral-400">
          Mejor Rating
        </div>
      </div>
    </div>

    <!-- Top civilizaciones -->
    <div class="mb-4">
      <div class="flex items-center justify-between mb-3">
        <h4 class="font-semibold text-neutral-900 dark:text-neutral-100">
          Top {showTopCivs} Civilizaciones
        </h4>
        <button 
          class="text-xs text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium transition-colors"
          onclick={`document.getElementById('${modalId}').showModal()`}
        >
          Ver todas
        </button>
      </div>
      
      <div class="space-y-3">
        {sortedCivs.map(([civName, rating], index) => (
          <div key={civName} class="flex items-center space-x-3">
            <!-- Posición -->
            <div class:list={[
              "w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white",
              index === 0 ? 'bg-yellow-500' : 
              index === 1 ? 'bg-gray-400' : 
              index === 2 ? 'bg-amber-600' : 'bg-neutral-400'
            ]}>
              {index + 1}
            </div>
            
            <!-- Información de la civilización -->
            <div class="flex-1 min-w-0">
              <div class="flex items-center justify-between mb-1">
                <span class="font-medium text-neutral-900 dark:text-neutral-100 truncate">
                  {civName}
                </span>
                <span class:list={[
                  "text-sm font-bold",
                  getRatingColor(rating)
                ]}>
                  {rating}
                </span>
              </div>
              
              <!-- Barra de progreso -->
              <div class="w-full bg-neutral-200 dark:bg-neutral-600 rounded-full h-2">
                <div 
                  class:list={[
                    "h-2 rounded-full transition-all duration-500",
                    getProgressColor(rating)
                  ]}
                  style={`width: ${rating}%`}
                ></div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Distribución de ratings -->
    <div class="mb-4">
      <h4 class="font-semibold text-neutral-900 dark:text-neutral-100 mb-3">
        Distribución de Ratings
      </h4>
      
      <div class="grid grid-cols-4 gap-2 text-center">
        {[
          { label: '95+', color: 'bg-green-500', count: Object.values(mapData.civ_rating).filter(r => r >= 95).length },
          { label: '90-94', color: 'bg-blue-500', count: Object.values(mapData.civ_rating).filter(r => r >= 90 && r < 95).length },
          { label: '85-89', color: 'bg-yellow-500', count: Object.values(mapData.civ_rating).filter(r => r >= 85 && r < 90).length },
          { label: '<85', color: 'bg-red-500', count: Object.values(mapData.civ_rating).filter(r => r < 85).length }
        ].map((range) => (
          <div key={range.label} class="p-2 rounded-lg bg-neutral-50 dark:bg-neutral-700">
            <div class:list={["w-4 h-4 rounded mx-auto mb-1", range.color]}></div>
            <div class="text-xs font-medium text-neutral-900 dark:text-neutral-100">
              {range.count}
            </div>
            <div class="text-xs text-neutral-500 dark:text-neutral-400">
              {range.label}
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Footer con acciones -->
    <div class="pt-4 border-t border-neutral-200 dark:border-neutral-600">
      <div class="flex items-center">
  
        <div class="flex items-center space-x-2">
          <!-- <button class="inline-flex items-center px-3 py-1.5 rounded-md text-xs font-medium bg-neutral-100 text-neutral-700 hover:bg-neutral-200 dark:bg-neutral-600 dark:text-neutral-300 dark:hover:bg-neutral-500 transition-colors">
            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            Estadísticas
          </button> -->
          
          <button 
            class="inline-flex items-center px-3 py-1.5 rounded-md text-xs font-medium bg-blue-100 text-blue-700 hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800 transition-colors"
            onclick={`document.getElementById('${modalId}').showModal()`}
          >
            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 011-1z" clip-rule="evenodd"></path>
            </svg>
            Ver más
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Incluir el modal como componente separado -->
<CivilizationsModal 
  mapData={mapData}
  modalId={modalId}
/>
