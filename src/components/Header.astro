---
// src/components/Header.astro
---

<header
  class="flex items-center justify-between p-4 bg-white dark:bg-neutral-800 shadow transition-colors"
>
  <h1 class="text-2xl font-semibold text-neutral-900 dark:text-neutral-100">
    Cartoon Network
    <span class="text-base text-neutral-700 dark:text-neutral-300">Team Games</span>
  </h1>
  <!-- Mobile menu button -->
  <button
    id="mobile-menu-toggle"
    class="md:hidden p-2 rounded bg-neutral-200 dark:bg-neutral-700 focus:outline-none transition-colors"
    aria-label="Abrir menú"
    type="button"
  >
    <svg
      id="mobile-menu-icon"
      class="w-6 h-6 text-neutral-800 dark:text-neutral-100"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="M4 6h16M4 12h16M4 18h16"
      />
    </svg>
  </button>
  <!-- Mobile close button (shows only when menu is open) -->
  <button
    id="mobile-menu-close"
    class="fixed top-5 right-5 z-30 md:hidden p-2 rounded bg-neutral-200 dark:bg-neutral-700 focus:outline-none transition-colors hidden"
    aria-label="Cerrar menú"
    type="button"
  >
    <svg class="w-6 h-6 text-neutral-800 dark:text-neutral-100" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
    </svg>
  </button>
  <!-- Mobile menu backdrop -->
  <div
    id="menu-backdrop"
    class="fixed inset-0 bg-black bg-opacity-40 z-10 hidden md:hidden transition-opacity"
  ></div>
  <nav
    id="navbar"
    class="flex flex-col items-start md:flex-row md:items-center space-y-2 md:space-y-0 md:space-x-4 absolute md:static top-16 left-0 w-full md:w-auto bg-white dark:bg-neutral-800 shadow-lg md:shadow-none p-4 md:p-0 z-20 hidden md:flex transition-all duration-300 rounded-b-lg"
  >
    <a
      href="/"
      class="block w-full px-4 py-3 rounded text-lg text-neutral-900 dark:text-neutral-100 transition-colors hover:bg-neutral-200 hover:text-blue-700 dark:hover:bg-neutral-700 dark:hover:text-yellow-300"
      >Inicio</a
    >
    <a
      href="/maps"
      class="block w-full px-4 py-3 rounded text-lg text-neutral-900 dark:text-neutral-100 transition-colors hover:bg-neutral-200 hover:text-blue-700 dark:hover:bg-neutral-700 dark:hover:text-yellow-300"
      >Mapas</a
    >
    <a
      href="/players"
      class="block w-full px-4 py-3 rounded text-lg text-neutral-900 dark:text-neutral-100 transition-colors hover:bg-neutral-200 hover:text-blue-700 dark:hover:bg-neutral-700 dark:hover:text-yellow-300"
      >Jugadores</a
    >
    <a
      href="/matches"
      class="block w-full px-4 py-3 rounded text-lg text-neutral-900 dark:text-neutral-100 transition-colors hover:bg-neutral-200 hover:text-blue-700 dark:hover:bg-neutral-700 dark:hover:text-yellow-300"
      >Partidas</a
    >
    <button
      id="theme-toggle"
      aria-label="Toggle dark mode"
      class="p-2 rounded-full bg-neutral-200 dark:bg-neutral-700 focus:outline-none transition-colors cursor-pointer ml-2"
    >
      <span id="theme-icon" class="text-neutral-800 dark:text-yellow-300">🌙</span>
    </button>
  </nav>

  <script is:inline>
    (() => {
      // Theme toggle logic
      const root = document.documentElement;
      const toggle = document.getElementById("theme-toggle");
      const icon = document.getElementById("theme-icon");
      const DARK_CLASS = "dark";
      const LS_KEY = "theme";

      const stored = localStorage.getItem(LS_KEY);
      const useDark =
        stored === "dark" ||
        (!stored && window.matchMedia("(prefers-color-scheme: dark)").matches);
      if (useDark) {
        root.classList.add(DARK_CLASS);
        icon.textContent = "☀️";
      }

      toggle.addEventListener("click", () => {
        const isDark = root.classList.toggle(DARK_CLASS);
        localStorage.setItem(LS_KEY, isDark ? "dark" : "light");
        icon.textContent = isDark ? "☀️" : "🌙";
      });

      // Mobile menu logic
      const menuToggle = document.getElementById("mobile-menu-toggle");
      const menuClose = document.getElementById("mobile-menu-close");
      const navbar = document.getElementById("navbar");
      const backdrop = document.getElementById("menu-backdrop");
      const navLinks = navbar.querySelectorAll("a");

      function openMenu() {
        navbar.classList.remove("hidden");
        backdrop.classList.remove("hidden");
        menuClose.classList.remove("hidden");
        setTimeout(() => {
          backdrop.classList.add("opacity-100");
        }, 10);
      }

      function closeMenu() {
        navbar.classList.add("hidden");
        backdrop.classList.add("hidden");
        menuClose.classList.add("hidden");
        backdrop.classList.remove("opacity-100");
      }

      menuToggle.addEventListener("click", () => {
        if (navbar.classList.contains("hidden")) {
          openMenu();
        } else {
          closeMenu();
        }
      });

      menuClose.addEventListener("click", closeMenu);
      backdrop.addEventListener("click", closeMenu);

      navLinks.forEach((link) => {
        link.addEventListener("click", () => {
          if (window.innerWidth < 768) closeMenu();
        });
      });
    })();
  </script>
</header>
